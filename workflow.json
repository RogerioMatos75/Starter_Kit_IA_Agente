{
    "nome_workflow": "Desenvolvimento Web Full-Stack Padrão",
    "estados": [
        {
            "nome": "Coleta de Requisitos",
            "tipo": "documentacao",
            "artefato_gerado": "01_resumo_requisitos.md",
            "guia": "output/plano_base.md",
            "descricao": "Gera um resumo do domínio do projeto com base no plano de base."
        },
        {
            "nome": "Definição de Arquitetura",
            "tipo": "documentacao",
            "artefato_gerado": "02_desenho_arquitetura.md",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Gera um esqueleto de arquitetura para o projeto."
        },
        {
            "nome": "Revisão e Sugestão de Implementações Chave",
            "tipo": "documentacao",
            "artefato_gerado": "02_sugestoes_implementacao.md",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Gera sugestões para implementações chave (logging, testes, CI/CD, banco de dados, autenticação) com prós e contras."
        },
        {
            "nome": "Regras de Negócio",
            "tipo": "documentacao",
            "artefato_gerado": "03_regras_negocio.md",
            "guia": "output/regras_negocio.md",
            "descricao": "Lista e explica as regras de negócio, restrições e exceções."
        },
        {
            "nome": "Backlog MVP",
            "tipo": "documentacao",
            "artefato_gerado": "04_backlog_mvp.md",
            "guia": "output/backlog_mvp.md",
            "descricao": "Gera um backlog inicial para o MVP com base nas funcionalidades."
        },
        {
            "nome": "Backend: API de Autenticação",
            "tipo": "backend",
            "artefato_gerado": "api_autenticacao.py",
            "tecnologia": "Python/Flask",
            "guia": "output/autenticacao_backend.md",
            "descricao": "Implementa o endpoint de login e registro de usuários."
        },
        {
            "nome": "Frontend Web: Tela de Login",
            "tipo": "frontend",
            "artefato_gerado": "web_login_page.jsx",
            "tecnologia": "React/Next.js",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Cria a tela de login para a plataforma web, seguindo as diretrizes de UI/UX."
        },
        {
            "nome": "Frontend Mobile: Tela de Login",
            "tipo": "frontend",
            "artefato_gerado": "mobile_login_page.dart",
            "tecnologia": "Flutter",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Cria a tela de login para a plataforma mobile, seguindo as diretrizes de UI/UX."
        },
        {
            "nome": "Frontend: Página de Autenticação (Supabase)",
            "tipo": "frontend",
            "artefato_gerado": "web_auth_supabase.jsx",
            "tecnologia": "React/Next.js + Supabase",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Cria uma página de autenticação completa (login, cadastro, recuperação de senha) integrando com o Supabase Auth."
        },
        {
            "nome": "Deploy: Guia de Vercel e Monetização",
            "tipo": "documentacao",
            "artefato_gerado": "07_guia_deploy_monetizacao.md",
            "guia": "output/plano_base.md",
            "descricao": "Gera um guia passo a passo para fazer o deploy do aplicativo na Vercel e sugere 3 gateways de pagamento (ex: Stripe, Mercado Pago) com um resumo de como integrá-los."
        },
        {
            "nome": "Provisionar Banco de Dados (Supabase)",
            "tipo": "devops",
            "artefato_gerado": "supabase_schema.sql",
            "tecnologia": "Supabase/PostgreSQL",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Cria o schema do banco de dados no Supabase."
        },
        {
            "nome": "Build da Aplicação (Docker)",
            "tipo": "devops",
            "artefato_gerado": "Dockerfile",
            "tecnologia": "Docker",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Cria um Dockerfile para a aplicação."
        },
        {
            "nome": "Deploy na Plataforma (Vercel)",
            "tipo": "devops",
            "artefato_gerado": "vercel.json",
            "tecnologia": "Vercel",
            "guia": "output/arquitetura_tecnica.md",
            "descricao": "Configura o deploy da aplicação na Vercel."
        },
        {
            "nome": "Configurar Pagamentos (Stripe)",
            "tipo": "devops",
            "artefato_gerado": "stripe_config.json",
            "tecnologia": "Stripe",
            "guia": "output/plano_base.md",
            "descricao": "Configura os produtos e webhooks no Stripe."
        }
    ]
}